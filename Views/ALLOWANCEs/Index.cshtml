@model HRM.Models.ALLOWANCE

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/fresh-bootstrap-table.css" rel="stylesheet" />

    <link href="https://unpkg.com/bootstrap-table@1.18.1/dist/bootstrap-table.min.css" rel="stylesheet">
    <script src="https://unpkg.com/bootstrap-table@1.18.1/dist/bootstrap-table.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.18.1/dist/extensions/export/bootstrap-table-export.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table/dist/bootstrap-table.min.js"></script>
</head>
<style>
    table, th, td, tr {
        border-color: #DFE0EB !important;
        border-radius: 5px !important;
    }

    .add__button {
        display: block;
        height: 36px;
        width: 94px;
        right: 36px;
        top: 80px;
        position: absolute;
        background: #E3F2FD;
        border: 1px solid #3D76B5;
        border-radius: 4px;
        /* Text */
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: 600;
        font-size: 14px;
        line-height: 20px;
        text-align: center;
        letter-spacing: 0.2px;
        color: #3D76B5;
    }

    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 12; /* Sit on top */
        float: left;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        text-align: left;
        width: 490px;
        height: 554px;
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        -webkit-animation-name: fadeIn; /* Fade in the background */
        -webkit-animation-duration: 0.4s;
        animation-name: fadeIn;
        animation-duration: 0.4s;
        vertical-align: middle;
        margin-left: 122px;
        margin-top: 30px;
    }

    /* Modal Content */
    .modal-content {
        position: fixed;
        background-color: #fefefe;
        width: 100%;
        height: 100%;
        -webkit-animation-name: slideIn;
        -webkit-animation-duration: 0.4s;
        animation-name: slideIn;
        animation-duration: 0.4s
    }

    /* The Close Button */
    .close {
        color: #4282BB;
        float: right;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

    .modal-header {
        top: 0px;
        height: 32px;
        padding: 2px 16px;
        background-color: #E0EFFF;
        color: #4282BB;
        font-size: 20px;
        font-family: 'IBM Plex Sans', sans-serif;
        font-style: normal;
        font-weight: bold;
    }

    .modal-body {
        padding-top: 10px;
        padding-left: 37px;
        padding-right: 37px;
    }

    #bg {
        background-color: black;
        width: 0;
        height: 0;
        display: none;
        position: fixed;
        top: 0px;
        left: 0px;
    }

    .add__button {
        display: block;
        height: 36px;
        width: 94px;
        right: 36px;
        top: 80px;
        position: absolute;
        background: #E3F2FD;
        border: 1px solid #3D76B5;
        border-radius: 4px;
    }

    .modal__text {
        font-size: 15px;
        font-family: 'IBM Plex Sans', sans-serif;
        font-style: normal;
        margin-top: 13px;
        margin-bottom: 7px;
    }

    .form-control, select {
        height: 47px;
        width: calc(100% - 4px);
        font-size: 15px;
        font-family: 'IBM Plex Sans', sans-serif;
        font-style: normal;
        padding-left: 10px;
        background: #F8FAFA;
        border: 1px solid #DBDBDB;
        box-sizing: border-box;
        border-radius: 4px;
        left: 0 !important;
        right: 0 !important;
    }

    .check-box {
        margin-top: 2px;
        margin-bottom: 2px;
        padding: 0;
        list-style: none;
        width: 20px;
        height: 20px;
        box-sizing: border-box;
        border-radius: 2px;
        margin-left: 0px;
        margin-right: 0px;
        margin-top: 8px;
        margin-bottom: 8px;
    }

    .btn.btn-default {
        position: fixed;
        display: block;
        text-align: center;
        padding: 0px;
        bottom: 37px;
        margin-top: 0px;
        margin-bottom: 0px;
        width: 126px;
        height: 40px;
        box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
        border-radius: 4px;
        color: white;
    }

    input#StartTime, input#EndTime {
        font-size: 15px;
        font-family: 'IBM Plex Sans', sans-serif;
        font-style: normal;
        padding-left: 10px;
        background: #F8FAFA;
        border: 1px solid #DBDBDB;
        box-sizing: border-box;
        border-radius: 4px;
        display: inline;
    }

    .form-horizontal .form-group {
        margin-right: 0px;
        margin-left: 0px;
    }


    .text-danger.field-validation-error {
        color: red;
        font-size: 13px;
        font-family: 'IBM Plex Sans', sans-serif;
        font-style: normal;
    }

    .modal-title {
        display: inline-block;
        width: 50%;
    }
</style>

<input type="button" id="btn" class="add__button" value="Thêm" onclick="openCreateModal()" />

<div class="fresh-table">
    <table data-sortable="true" class="fresh-table" id="fresh-table" width="100%" style="margin-top:40px;">
        <thead>
            <tr>
                <th data-sortable="true">
                    @Html.DisplayName("Tên loại trợ cấp / phụ cấp / thưởng")
                </th>
                <th data-sortable="true">
                    @Html.DisplayName("Phải tính để tham gia bảo hiểm bắt buộc")
                </th>
                <th data-sortable="true">
                    @Html.DisplayName("Được miễn thuế")
                </th>
                <th data-sortable="true">
                    @Html.DisplayName("Số tiền được miễn")
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody id="SetAllowanceList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>
</div>

<!-- The Create Modal -->
<div id="createModal" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <div class="modal-title">Thêm loại thưởng/trợ cấp/phụ cấp</div>
            <span class="close" onclick="closeModal()">&times;</span>
        </div>
        <div class="modal-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.AllowanceID)

                    <div class="form-group">
                        <div class="modal__text">
                            Tên loại thưởng/trợ cấp/phụ cấp
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AllowanceName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AllowanceName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="modal__text">
                            Tính bảo hiểm
                        </div>
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Insurance)
                                @Html.ValidationMessageFor(model => model.Insurance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="modal__text">
                            Tính thuế
                        </div>
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Tax)
                                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FreeTax, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FreeTax, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FreeTax, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

            <script>
                var $table = $('#fresh-table')
                $(function () {
                    $table.bootstrapTable({
                        classes: 'table table-hover table-responsive',
                        toolbar: '.toolbar',
                        pagination: true,
                        striped: true,
                        pageSize: 8,
                        pageList: [8, 10, 25, 50, 100],

                        formatShowingRows: function (pageFrom, pageTo, totalRows) {
                            return ''
                        },
                        formatRecordsPerPage: function (pageNumber) {
                            return pageNumber + ' rows visible'
                        }
                    })
                })


            </script>
            <!--script for interactive with user-->
            <script>
                $("#LoadingStatus").html("Loading....");
                // Get the modal
                var create_modal = document.getElementById("createModal");
                var delete_modal = document.getElementById("deleteModal");

                // Get the <span> element that closes the modal
                var span = document.getElementsByClassName("close")[0];

                // When the user clicks the button, open the modal
                function openCreateModal() {
                    $("#modal-title").html("Thêm loại thưởng, phụ cấp, trợ cấp");
                    create_modal.style.display = "block";

                    document.getElementById("frm").reset();

                    $("#bg").width("100%").height("100%");

                    $("#bg").fadeTo("slow", 0.8);
                }

                //close create modal
                function closeModal() {
                    window.location.reload();
                    create_modal.style.display = "none";
                    delete_modal.style.display = "none";
                    $("#bg").fadeOut();
                }

                //function to get list of shift and display on table
                var allowances;
                $.get("/ALLOWANCEs/GetAllowanceList", null, DataBind);
                function DataBind(result) {
                    if (result.str == "success") {
                        var SetData = $("#SetAllowanceList");
                        allowances = result.list;
                        if (allowances.length == 0)
                            $("#LoadingStatus").html("Chưa có dữ liệu nào.");
                        for (var i = 0; i < allowances.length; i++) {
                            SetData.append(GetDataString(allowances[i], i));
                            $("#LoadingStatus").html(" ");
                        }
                    }
                    else {
                        $("#LoadingStatus").html("Có lỗi xảy ra trong quá trình tải dữ liệu.");
                    }
                }

                function GetDataString(allowance, n) {
                    var Data = "<tr class='row_" + allowance.ShiftID + "'>" +
                        "<td>" + (n + 1) + "</td>" +
                        "<td>" + allowance.AllowanceName + "</td>";
                    if (allowance.Insurance == true) {
                        Data = Data + "<td> Có </td>";
                    }
                    else {
                        Data = Data + "<td> Không </td>";
                    }
                    if (allowance.Tax == true) {
                        Data = Data + "<td> Có </td>";
                    }
                    else {
                        Data = Data + "<td> Không </td>";
                    }
                    Data = Data + "<td>" + allowance.FreeTax + "</td>";

                    Data = Data + "<td class=\"text-center\" onclick=\"EditModule(" + "'" + allowance.AllowanceID + "'" + ")\">"
                        + "<i class='fa fa-edit pa-5 text-warning'></i>" +
                        "</td>" +
                        " <td class=\"text-center\" onclick=\"DeleteModule(" + "'" + allowance.AllowanceID + "'" + ")\" >"
                        + "<i class='fa fa-trash pa-5 text-danger' ></i>" +
                        "</td>" +
                        "</tr>";
                    return Data;
                }

                //function to show information of a shift on modal
                function EditModule(id) {
                    $("#modal-title").html("Sửa loại thưởng, trợ cấp, phụ cấp");
                    document.getElementById("frm").reset();
                    for (var i = 0; i < allowances.length; i++) {
                        if (allowances[i].AllowancesID == id) {
                            document.getElementById("AllowancesID").value = allowances[i].AllowancesID;
                            document.getElementById("AllowancesName").value = allowances[i].AllowancesName;
                            document.getElementById("Insurance").checked = allowances[i].Insurance;
                            document.getElementById("Tax").checked = allowances[i].Tax;
                            document.getElementById("FreeTax").value = allowances[i].FreeTax;
                        }
                    }

                    create_modal.style.display = "block";

                    $("#bg").width("100%").height("100%");

                    $("#bg").fadeTo("slow", 0.8);
                }

                //functions to show delete confirm
                var deleteId;
                function DeleteModule(id) {
                    deleteId = id;
                    var name;
                    for (var i = 0; i < allowances.length; i++) {
                        if (allowances[i].ShiftID == id) {
                            name = allowances[i].AllowanceName;
                        }
                    }
                    var noticeString = "Dữ liệu về " + name + " sẽ bị xóa vĩnh viễn. Bạn có chắc chắn muốn xóa?";
                    $("#modal__text").html(noticeString);
                    delete_modal.style.display = "block";
                    $("#bg").width("100%").height("100%");

                    $("#bg").fadeTo("slow", 0.8);
                }

                function deleteByID() {
                    $.ajax({
                        type: 'POST',
                        url: '/ALLOWANCEs/DeleteConfirmed',
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ "id": deleteId }),
                        success: function (data) {
                            // do what ever you want with the server response
                            alert("Xóa thành công");
                            closeModal();
                        },
                        error: function (error) {
                            // error handling
                            alert("Xóa không thành công");
                            console.log();
                        }
                    });
                }
            </script>
