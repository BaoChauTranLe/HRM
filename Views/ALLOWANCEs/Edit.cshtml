@model HRM.Models.ALLOWANCE

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
	<style>
		.create-lbl {
			font-family: IBM Plex Sans;
			font-style: normal;
			font-weight: normal;
			font-size: 15px;
			line-height: 150%;
			/* identical to box height, or 22px */
			letter-spacing: 0.01em;
			color: #000000;
		}

		.create-txtbox {
			/* Text Block */
			/* Auto Layout */
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			width: 500px;
			height: 50px;
			/* Surface/Light */
			background: #F8FAFA;
			border: 1px solid #DBDBDB;
			box-sizing: border-box;
			border-radius: 4px;
			/* Inside Auto Layout */
			flex: none;
			order: 1;
			align-self: stretch;
			flex-grow: 0;
			/*Inside Text*/
			padding: 12px;
			font-family: IBM Plex Sans;
			font-style: normal;
			font-weight: normal;
			font-size: 15px;
			line-height: 150%;
			letter-spacing: 0.01em;
			color: #060606;
		}

		.create-margin {
			margin-left: 24px;
			margin-top: 20px;
		}

		.create-btn {
			box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
			border-radius: 4px;
			width: 126px;
			height: 40px;
			/* Inside Text */
			font-family: IBM Plex Sans;
			font-style: normal;
			font-weight: 500;
			font-size: 14px;
			line-height: 16px;
			text-align: center;
			letter-spacing: 1.25px;
			text-transform: uppercase;
			color: #FFFFFF;
		}

		.error-msg {
			font-family: Montserrat;
			color: red;
		}

		.index-txtbox {
			width: 500px;
			height: 50px;
			/* Surface/Light */
			background: #F8FAFA;
			border: 1px solid #DBDBDB;
			box-sizing: border-box;
			border-radius: 4px;
			/*Text*/
			font-family: IBM Plex Sans;
			font-style: normal;
			font-weight: normal;
			font-size: 15px;
			line-height: 150%;
			padding-left: 10px;
		}
	</style>
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AllowanceID)

        <div class="form-group">
            @Html.LabelFor(model => model.AllowanceName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AllowanceName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AllowanceName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Insurance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Insurance)
                    @Html.ValidationMessageFor(model => model.Insurance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreeTax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.FreeTax)
                    @Html.ValidationMessageFor(model => model.FreeTax, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreeTaxValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FreeTaxValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FreeTaxValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllEmployee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AllEmployee)
                    @Html.ValidationMessageFor(model => model.AllEmployee, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Type)
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
