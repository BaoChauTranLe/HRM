@model HRM.Models.SHIFT

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;700&display=swap" rel="stylesheet">
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <style>
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 12; /* Sit on top */
            float: left;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            text-align: left;
            width: 490px;
            height: 554px;
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            -webkit-animation-name: fadeIn; /* Fade in the background */
            -webkit-animation-duration: 0.4s;
            animation-name: fadeIn;
            animation-duration: 0.4s;
            vertical-align: middle;
            margin-left: 122px;
            margin-top: 30px;
        }

        /* Modal Content */
        .modal-content {
            position: fixed;
            background-color: #fefefe;
            width: 100%;
            height: 100%;
            -webkit-animation-name: slideIn;
            -webkit-animation-duration: 0.4s;
            animation-name: slideIn;
            animation-duration: 0.4s
        }

        /* The Close Button */
        .close {
            color: #4282BB;
            float: right;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-header {
            top: 0px;
            height: 32px;
            padding: 2px 16px;
            padding-top: 10px;
            background-color: #E0EFFF;
            color: #4282BB;
            font-size: 20px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            font-weight: bold;
        }

        .modal-body {
            padding-top: 10px;
            padding-left: 37px;
            padding-right: 37px;
        }

        #bg {
            background-color: black;
            width: 0;
            height: 0;
            display: none;
            position: fixed;
            top: 0px;
            left: 0px;
        }

        .add__button {
            display: block;
            height: 36px;
            width: 94px;
            right: 36px;
            top: 80px;
            position: absolute;
            background: #E3F2FD;
            border: 1px solid #3D76B5;
            border-radius: 4px;
        }

        .modal__text {
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            margin-top: 13px;
            margin-bottom: 7px;
        }

        .form-control, select {
            height: 47px;
            width: 100%;
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            padding-left: 10px;
            background: #F8FAFA;
            border: 1px solid #DBDBDB;
            box-sizing: border-box;
            border-radius: 4px;
        }

        .check-box {
            margin-top: 2px;
            margin-bottom: 2px;
            padding: 0;
            list-style: none;
            width: 20px;
            height: 20px;
            box-sizing: border-box;
            border-radius: 2px;
            margin-left: 0px;
            margin-right: 0px;
            margin-top: 8px;
            margin-bottom: 8px;
        }

        .btn.btn-default {
            position: fixed;
            display: block;
            text-align: center;
            padding: 0px;
            bottom: 37px;
            margin-top: 0px;
            margin-bottom: 0px;
            width: 126px;
            height: 40px;
            box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
            border-radius: 4px;
            color: white;
        }

        input#StartTime, input#EndTime {
            height: 47px;
            width: 45.5%;
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            padding-left: 10px;
            background: #F8FAFA;
            border: 1px solid #DBDBDB;
            box-sizing: border-box;
            border-radius: 4px;
            display: inline;
        }

        .form-group-time {
            display: inline;
            width: 45.5%;
        }

        .text-danger.field-validation-error {
            color: red;
            font-size: 13px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
        }
    </style>
</head>

<body>
    <button id="btn" class="add__button">Thêm</button>

    <!-- The Modal -->
    <div id="createModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                Thêm ca làm việc
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Index", "SHIFTs", FormMethod.Post, new { name = "frm", id = "frm" }))
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal" id="newForm">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="modal__text">
                            Tên ca
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ShiftName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShiftName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="modal__text">
                            Loại ca
                        </div>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ShiftType, (IEnumerable<SelectListItem>)ViewBag.ListOfShiftType, "--Chọn loại ca--", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShiftType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="modal__text">
                        Thời gian làm việc
                    </div>

                    <div class="form-group-time">
                        <div class="col-md-10" style="display: inline; width: 45.5%;">
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <span>đến</span>

                    <div class="form-group-time">
                        <div class="col-md-10" style="display: inline; width: 45.5%;">
                            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                    
                    <div class="modal__text">
                        Các ngày làm việc trong tuần
                    </div>

                    <div class="form-group" style="display: inline-block; width: 100px;">
                        <div class="col-md-10" style="display: inline;">
                            <div class="checkbox" style="display: inline;">
                                @Html.EditorFor(model => model.Monday) Thứ hai
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                        <div class="col-md-10" style="display: inline;">
                            <div class="checkbox" style="display: inline;">
                                @Html.EditorFor(model => model.Tuesday) Thứ ba
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                        <div class="col-md-10" style="display: inline;">
                            <div class="checkbox" style="display: inline;">
                                @Html.EditorFor(model => model.Wednesday) Thứ tư
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                        <div class="col-md-10" style="display: inline;">
                            <div class="checkbox" style="display: inline;">
                                @Html.EditorFor(model => model.Thursday) Thứ năm
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                        <div class="col-md-10" style="display: inline;">
                            <div class="checkbox" style="display: inline;">
                                @Html.EditorFor(model => model.Friday) Thứ sáu
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                        <div class="col-md-10" style="display: inline;">
                            <div class="checkbox" style="display: inline;">
                                @Html.EditorFor(model => model.Saturday) Thứ bảy
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                        <div class="col-md-10" style="display: inline;">
                            <div class="checkbox" style="display: inline;">
                                @Html.EditorFor(model => model.Sunday) Chủ nhật
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Tạo" class="btn btn-default" style="        background: #3D76B5; left: 110px;
" />
                            <input type="button" value="Hủy" class="btn btn-default" onclick="closeModal()" style="        background: #C33333; right: 110px;
" />
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>

    <div id="bg" onclick="closeModal()"></div>


    <br />
    <br />
    <br />
    <table class="table table-striped">
        <thead>
            <tr>
                <th>STT</th>
                <th>Tên ca</th>
                <th>Loại ca</th>
                <th>Thời gian</th>
                <th>Thời lượng</th>
                <th>Các ngày làm việc trong tuần</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="SetShiftList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <script>
        $("#LoadingStatus").html("Loading....");
        // Get the modal
        var modal = document.getElementById("createModal");

        // Get the button that opens the modal
        var btn = document.getElementById("btn");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks the button, open the modal
        btn.onclick = function () {
            
            modal.style.display = "block";
            document.getElementById("frm").reset();

            $("#bg").width("100%").height("100%");

            $("#bg").fadeTo("slow", 0.8);
        }

        var btnCreate = document.getElementById("savebtn");

        //close create modal
        function closeModal() {
            window.location.reload();
            modal.style.display = "none";
            $("#bg").fadeOut();
        }

        function ChangeDateTime(date) {
            var b = date.match(/\d+/g);

            // Get the sign of the offset
            var sign = /-/.test(date) ? -1 : +1;

            // Adjust the time value by the offset converted to milliseconds
            // and use to create a Date
            var ms = +b[0] + sign * (b[1].toISOString().slice(0, 2) * 3.6e6 + b[1].toISOString().slice(-2) * 6e4);

            return new Date(ms).toISOString();
        }

        $.get("/SHIFTs/GetShiftList", null, DataBind);
        function DataBind(ShiftList) {
            var SetData = $("#SetShiftList");
            for (var i = 0; i < ShiftList.length; i++) {
                var Data = "<tr class='row_" + ShiftList[i].ShiftID + "'>" +
                    "<td>" + (i + 1) + "</td>" +
                    "<td>" + ShiftList[i].ShiftName + "</td>" +
                    "<td>" + ShiftList[i].ShiftType + "</td>" +
                    "<td>" + ChangeDateTime(ShiftList[i].StartTime) + " - " + ChangeDateTime(ShiftList[i].EndTime) + "</td>" +
                    "<td>" + "</td>" +
                    "<td>";

                var flag = 0;
                if (ShiftList[i].Monday == true) {
                    Data = Data + "T2";
                    flag = 1;
                }
                if (ShiftList[i].Tuesday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T3";
                    flag = 1;
                }
                if (ShiftList[i].Wednesday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T4";
                    flag = 1;
                }
                if (ShiftList[i].Thursday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T5";
                    flag = 1;
                }
                if (ShiftList[i].Friday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T6";
                    flag = 1;
                }
                if (ShiftList[i].Saturday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T7";
                    flag = 1;
                }
                if (ShiftList[i].Sunday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "CN";
                    flag = 1;
                }
                Data = Data + "</td>" + "</tr>";
                SetData.append(Data);
                $("#LoadingStatus").html(" ");
            }
        }
    </script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="/Scripts/jquery.validate.js"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.js"></script>
</body>