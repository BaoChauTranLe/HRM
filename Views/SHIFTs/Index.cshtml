@model HRM.Models.SHIFT

@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous"></script>
    <link href="https://unpkg.com/bootstrap-table@1.18.1/dist/bootstrap-table.min.css" rel="stylesheet">

    <script src="https://unpkg.com/tableexport.jquery.plugin/tableExport.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.18.1/dist/bootstrap-table.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.18.1/dist/bootstrap-table-locale-all.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.18.1/dist/extensions/export/bootstrap-table-export.min.js"></script>
    <style>
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 12; /* Sit on top */
            float: left;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            text-align: left;
            width: 490px;
            height: 554px;
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            -webkit-animation-name: fadeIn; /* Fade in the background */
            -webkit-animation-duration: 0.4s;
            animation-name: fadeIn;
            animation-duration: 0.4s;
            vertical-align: middle;
            margin-left: 122px;
            margin-top: 30px;
        }

        /* Modal Content */
        .modal-content {
            position: fixed;
            background-color: #fefefe;
            width: 100%;
            height: 100%;
            -webkit-animation-name: slideIn;
            -webkit-animation-duration: 0.4s;
            animation-name: slideIn;
            animation-duration: 0.4s
        }

        /* The Close Button */
        .close {
            color: #4282BB;
            float: right;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-header {
            top: 0px;
            height: 32px;
            padding: 2px 16px;
            padding-top: 10px;
            background-color: #E0EFFF;
            color: #4282BB;
            font-size: 20px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            font-weight: bold;
        }

        .modal-body {
            padding-top: 10px;
            padding-left: 37px;
            padding-right: 37px;
        }

        #bg {
            background-color: black;
            width: 0;
            height: 0;
            display: none;
            position: fixed;
            top: 0px;
            left: 0px;
        }

        .add__button {
            display: block;
            height: 36px;
            width: 94px;
            right: 36px;
            top: 80px;
            position: absolute;
            background: #E3F2FD;
            border: 1px solid #3D76B5;
            border-radius: 4px;
        }

        .modal__text {
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            margin-top: 13px;
            margin-bottom: 7px;
        }

        .form-control, select {
            height: 47px;
            width: 100%;
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            padding-left: 10px;
            background: #F8FAFA;
            border: 1px solid #DBDBDB;
            box-sizing: border-box;
            border-radius: 4px;
        }

        .check-box {
            margin-top: 2px;
            margin-bottom: 2px;
            padding: 0;
            list-style: none;
            width: 20px;
            height: 20px;
            box-sizing: border-box;
            border-radius: 2px;
            margin-left: 0px;
            margin-right: 0px;
            margin-top: 8px;
            margin-bottom: 8px;
        }

        .btn.btn-default {
            position: fixed;
            display: block;
            text-align: center;
            padding: 0px;
            bottom: 37px;
            margin-top: 0px;
            margin-bottom: 0px;
            width: 126px;
            height: 40px;
            box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
            border-radius: 4px;
            color: white;
        }

        input#StartTime, input#EndTime {
            height: 47px;
            width: 45.5%;
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            padding-left: 10px;
            background: #F8FAFA;
            border: 1px solid #DBDBDB;
            box-sizing: border-box;
            border-radius: 4px;
            display: inline;
        }

        .form-group-time {
            display: inline;
            width: 45.5%;
        }

        .text-danger.field-validation-error {
            color: red;
            font-size: 13px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
        }

        .modal-title {
            display: inline-block;
            width: 50%;
        }
    </style>
</head>

<body>
    <button id="btn" class="add__button">Thêm</button>

    <!-- The Create Modal -->
    <div id="createModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Thêm ca làm việc</div>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Index", "SHIFTs", FormMethod.Post, new { name = "frm", id = "frm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal" id="newForm">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ShiftID)
                        <div class="form-group">
                            <div class="modal__text">
                                Tên ca
                            </div>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ShiftName, "--Tên ca--", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShiftName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="modal__text">
                                Loại ca
                            </div>
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ShiftType, (IEnumerable<SelectListItem>)ViewBag.ListOfShiftType, "--Chọn loại ca--", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShiftType, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="modal__text">
                            Thời gian làm việc
                        </div>

                        <div class="form-group-time">
                            <div class="col-md-10" style="display: inline; width: 45.5%;">
                                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <span>đến</span>

                        <div class="form-group-time">
                            <div class="col-md-10" style="display: inline; width: 45.5%;">
                                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })

                        <div class="modal__text">
                            Các ngày làm việc trong tuần
                        </div>

                        <div class="form-group" style="display: inline-block; width: 100px;">
                            <div class="col-md-10" style="display: inline;">
                                <div class="checkbox" style="display: inline;">
                                    @Html.EditorFor(model => model.Monday) Thứ hai
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                            <div class="col-md-10" style="display: inline;">
                                <div class="checkbox" style="display: inline;">
                                    @Html.EditorFor(model => model.Tuesday) Thứ ba
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                            <div class="col-md-10" style="display: inline;">
                                <div class="checkbox" style="display: inline;">
                                    @Html.EditorFor(model => model.Wednesday) Thứ tư
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                            <div class="col-md-10" style="display: inline;">
                                <div class="checkbox" style="display: inline;">
                                    @Html.EditorFor(model => model.Thursday) Thứ năm
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                            <div class="col-md-10" style="display: inline;">
                                <div class="checkbox" style="display: inline;">
                                    @Html.EditorFor(model => model.Friday) Thứ sáu
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                            <div class="col-md-10" style="display: inline;">
                                <div class="checkbox" style="display: inline;">
                                    @Html.EditorFor(model => model.Saturday) Thứ bảy
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="        display: inline-block;
        width: 100px;
">
                            <div class="col-md-10" style="display: inline;">
                                <div class="checkbox" style="display: inline;">
                                    @Html.EditorFor(model => model.Sunday) Chủ nhật
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Lưu" class="btn btn-default" style="        background: #3D76B5; left: 110px;
" />
                                <input type="button" value="Hủy" class="btn btn-default" onclick="closeModal()" style="        background: #C33333; right: 110px;
" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- The Delete Modal -->
    <div id="deleteModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Xóa ca làm việc</div>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                <div class="modal__text" id="modal__text">
                </div>
                <ul class="button">
                    <li>
                        <a>
                            <input type="button" id="confirmbtn" value="Có" style="background: #3D76B5" onclick="deleteByID()"/>
                        </a>
                    </li>
                    <li>
                        <input type="button" id="declinebtn" value="Không" style="background: #C33333" onclick="closeModal()">
                    </li>
                </ul>
            </div>
        </div>
    </div>

                <div id="bg" onclick="closeModal()"></div>


                <br />
                <br />
                <br />
                <table class="table table-responsive table-hover">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên ca</th>
                            <th>Loại ca</th>
                            <th>Thời gian</th>
                            <th>Thời lượng</th>
                            <th>Các ngày làm việc trong tuần</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="SetShiftList">
                        <tr id="LoadingStatus" style="color:red"></tr>
                    </tbody>
                </table>

                <script>
                    $("#LoadingStatus").html("Loading....");
                    // Get the modal
                    var create_modal = document.getElementById("createModal");
                    var delete_modal = document.getElementById("deleteModal");

                    // Get the button that opens the modal
                    var btn = document.getElementById("btn");

                    // Get the <span> element that closes the modal
                    var span = document.getElementsByClassName("close")[0];

                    // When the user clicks the button, open the modal
                    btn.onclick = function () {
                        $("#modal-title").html("Thêm ca làm việc");
                        create_modal.style.display = "block";

                        document.getElementById("frm").reset();

                        $("#bg").width("100%").height("100%");

                        $("#bg").fadeTo("slow", 0.8);
                    }

                    //close create modal
                    function closeModal() {
                        window.location.reload();
                        create_modal.style.display = "none";
                        delete_modal.style.display = "none";
                        $("#bg").fadeOut();
                    }
                    var shifts;
                    $.get("/SHIFTs/GetShiftList", null, DataBind);
                    function DataBind(ShiftList) {
                        var SetData = $("#SetShiftList");
                        shifts = ShiftList;
                        if (ShiftList.length == 0)
                            $("#LoadingStatus").html("Có lỗi xảy ra khi tải dữ liệu, vui lòng tải lại trang để tải lại dữ liệu.");
                        for (var i = 0; i < ShiftList.length; i++) {
                            var start = moment(ShiftList[i].StartTime);
                            var end = moment(ShiftList[i].EndTime);
                            var Data = "<tr class='row_" + ShiftList[i].ShiftID + "'>" +
                                "<td>" + (i + 1) + "</td>" +
                                "<td>" + ShiftList[i].ShiftName + "</td>" +
                                "<td>" + ShiftList[i].ShiftType + "</td>" +
                                "<td>" + start.format("HH:mm") + " - " + end.format("HH:mm") + "</td>" +
                                "<td>" + end.diff(start, 'hours', true) + "h" + "</td>" +
                                "<td>";

                            var flag = 0;
                            if (ShiftList[i].Monday == true) {
                                Data = Data + "T2";
                                flag = 1;
                            }
                            if (ShiftList[i].Tuesday == true) {
                                if (flag == 1)
                                    Data = Data + ", ";
                                Data = Data + "T3";
                                flag = 1;
                            }
                            if (ShiftList[i].Wednesday == true) {
                                if (flag == 1)
                                    Data = Data + ", ";
                                Data = Data + "T4";
                                flag = 1;
                            }
                            if (ShiftList[i].Thursday == true) {
                                if (flag == 1)
                                    Data = Data + ", ";
                                Data = Data + "T5";
                                flag = 1;
                            }
                            if (ShiftList[i].Friday == true) {
                                if (flag == 1)
                                    Data = Data + ", ";
                                Data = Data + "T6";
                                flag = 1;
                            }
                            if (ShiftList[i].Saturday == true) {
                                if (flag == 1)
                                    Data = Data + ", ";
                                Data = Data + "T7";
                                flag = 1;
                            }
                            if (ShiftList[i].Sunday == true) {
                                if (flag == 1)
                                    Data = Data + ", ";
                                Data = Data + "CN";
                                flag = 1;
                            }
                            Data = Data + "</td>" + "<td class=\"text-center\" onclick=\"EditModule(" + "'" + ShiftList[i].ShiftID + "'" + ")\">"
                                + "<i class='fa fa-edit pa-5 text-warning'></i>" +
                                "</td>" +
                                " <td class=\"text-center\" onclick=\"DeleteModule(" + "'" + ShiftList[i].ShiftID + "'" + ")\" >"
                                + "<i class='fa fa-trash pa-5 text-danger' ></i>" +
                                "</td>" +
                                "</tr>";
                            SetData.append(Data);
                            $("#LoadingStatus").html(" ");
                        }
                    }

                    function EditModule(id) {
                        $("#modal-title").html("Sửa ca làm việc");
                        document.getElementById("frm").reset();
                        for (var i = 0; i < shifts.length; i++) {
                            if (shifts[i].ShiftID == id) {
                                document.getElementById("ShiftID").value = shifts[i].ShiftID;
                                document.getElementById("ShiftName").value = shifts[i].ShiftName;
                                //error
                                document.getElementById("StartTime").value = moment(shifts[i].StartTime).format('HH:mm a');
                                document.getElementById("EndTime").value = moment(shifts[i].EndTime);

                                document.getElementById("Monday").checked = shifts[i].Monday;
                                document.getElementById("Tuesday").checked = shifts[i].Tuesday;
                                document.getElementById("Wednesday").checked = shifts[i].Wednesday;
                                document.getElementById("Thursday").checked = shifts[i].Thursday;
                                document.getElementById("Friday").checked = shifts[i].Friday;
                                document.getElementById("Saturday").checked = shifts[i].Saturday;
                                document.getElementById("Sunday").checked = shifts[i].Sunday;
                                var ddl = document.getElementById('ShiftType');
                                var opts = ddl.options.length;
                                for (var j = 0; j < opts; j++) {
                                    if (ddl.options[j].value == shifts[i].ShiftType) {
                                        ddl.options[j].selected = true;
                                        break;
                                    }
                                }
                                break;
                            }
                        }

                        create_modal.style.display = "block";

                        $("#bg").width("100%").height("100%");

                        $("#bg").fadeTo("slow", 0.8);
                    }
                    var deleteId;
                    function DeleteModule(id) {
                        deleteId = id;
                        var name;
                        for (var i = 0; i < shifts.length; i++) {
                            if (shifts[i].ShiftID == id) {
                                name = shifts[i].ShiftName;
                            }
                        }
                        var noticeString = "Dữ liệu về " + name + " sẽ bị xóa vĩnh viễn. Bạn có chắc chắn muốn xóa?";
                        $("#modal__text").html(noticeString);
                        delete_modal.style.display = "block";
                        $("#bg").width("100%").height("100%");

                        $("#bg").fadeTo("slow", 0.8);
                    }

                    function deleteByID() {
                        //error
                        $.ajax({
                            type: 'POST',
                            url: "../../SHIFTs/DeleteConfirmed",
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            data: deleteId,
                            success: function (data) {
                                // do what ever you want with the server response
                                alert("Xóa thành công");
                                closeModal(); 
                            },
                            error: function (error) {
                                // error handling
                                //alert("Thao tác không thực hiện được do ca bạn muốn xóa vẫn có nhân viên đang làm việc.");
                                console.log();
                            }
                        });
                        
                    }
                </script>

                <!-- Script for validate start time and end time-->
                <script type="text/javascript">
                    $.validator.unobtrusive.adapters.add('isgreater', ['otherproperty'], function (options) {
                        options.rules['isgreater'] = { otherproperty: options.params.otherproperty };
                        options.messages['isgreater'] = options.message;
                    });

                    $.validator.addMethod("isgreater", function (value, element, param) {
                        var otherProp = $('#' + param.otherproperty);
                        if (otherProp.val() != '') {
                            var Start = new moment(otherProp.val(), 'HH:mm a');

                            var End = new moment(value, 'HH:mm a');
                            if (Start != '') {
                                if (Start.get('hour') > End.get('hour'))
                                    return false;
                                if (Start.get('hour') == End.get('hour') && Start.get('minute') >= End.get('minute'))
                                    return false;
                                return true;
                            }
                        }
                        return true;
                    });
                </script>
                @Scripts.Render("~/bundles/jquery")
                @Scripts.Render("~/bundles/jqueryval")
                <script src="/Scripts/jquery.validate.js"></script>
                <script src="/Scripts/jquery.validate.unobtrusive.js"></script>
</body>