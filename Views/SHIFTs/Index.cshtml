@model HRM.Models.SHIFT

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;700&display=swap" rel="stylesheet">
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <style>
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 12; /* Sit on top */
            float: left;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            text-align: left;
            width: 490px;
            height: 624px;
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            -webkit-animation-name: fadeIn; /* Fade in the background */
            -webkit-animation-duration: 0.4s;
            animation-name: fadeIn;
            animation-duration: 0.4s;
            vertical-align: middle;
            margin-left: 122px;
            margin-top: 30px;
        }

        /* Modal Content */
        .modal-content {
            position: fixed;
            background-color: #fefefe;
            width: 100%;
            height: 100%;
            -webkit-animation-name: slideIn;
            -webkit-animation-duration: 0.4s;
            animation-name: slideIn;
            animation-duration: 0.4s
        }

        /* The Close Button */
        .close {
            color: #4282BB;
            float: right;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-header {
            top: 0px;
            height: 32px;
            padding: 2px 16px;
            padding-top: 10px;
            background-color: #E0EFFF;
            color: #4282BB;
            font-size: 20px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            font-weight: bold;
        }

        .modal-body {
            padding-top: 10px;
            padding-left: 37px;
            padding-right: 37px;
        }

        #bg {
            background-color: black;
            width: 0;
            height: 0;
            display: none;
            position: fixed;
            top: 0px;
            left: 0px;
        }

        .add__button {
            display: block;
            height: 36px;
            width: 94px;
            right: 36px;
            top: 80px;
            position: absolute;
            background: #E3F2FD;
            border: 1px solid #3D76B5;
            border-radius: 4px;
        }

        .modal__text {
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            margin-top: 13px;
            margin-bottom: 7px;
        }

        .form-control {
            height: 47px;
            width: 100%;
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            padding-left: 10px;
            background: #F8FAFA;
            border: 1px solid #DBDBDB;
            box-sizing: border-box;
            border-radius: 4px;
        }

        ul.checkbox {
            margin-top: 2px;
            margin-bottom: 2px;
            padding: 0;
            list-style: none;
        }

            ul.checkbox li input {
                width: 20px;
                height: 20px;
                box-sizing: border-box;
                border-radius: 2px;
                margin-left: 0px;
                margin-right: 0px;
                margin-top: 8px;
                margin-bottom: 8px;
            }

            ul.checkbox li {
                display: inline-block;
                width: 6.5em;
            }

        ul.button {
            position: fixed;
            list-style: none;
            text-align: center;
            padding: 0px;
            bottom: 37px;
            margin-left: 60.5px;
            margin-right: 60.5px;
            margin-top: 0px;
            margin-bottom: 0px;
        }

            ul.button li {
                display: inline-block;
                padding-left: 10px;
                padding-right: 10px;
            }

                ul.button li input {
                    width: 126px;
                    height: 40px;
                    box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
                    border-radius: 4px;
                    color: white;
                }

        input {
            height: 47px;
            width: 45.5%;
            font-size: 15px;
            font-family: 'IBM Plex Sans', sans-serif;
            font-style: normal;
            padding-left: 10px;
            background: #F8FAFA;
            border: 1px solid #DBDBDB;
            box-sizing: border-box;
            border-radius: 4px;
        }
    </style>
</head>

<body>
    <button id="btn" class="add__button">Thêm</button>

    <!-- The Modal -->
    <div id="createModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                Thêm ca làm việc
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                <form id="form">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div id="SubmitForm">
                        @Html.HiddenFor(newShift => newShift.ShiftID, new { @id = "shiftID" })
                        <div class="col-md-10">
                            <div class="modal__text">
                                Mã ca
                            </div>
                            @Html.TextBoxFor(newShift => newShift.ShiftID, new { @id = "shiftID", @class = "form-control", @placeholder = "--Mã ca--" })
                            @Html.ValidationMessageFor(newShift => newShift.ShiftID, "Mã ca không hợp lệ", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-10">
                            <div class="modal__text">
                                Tên ca
                            </div>
                            @Html.TextBoxFor(newShift => newShift.ShiftName, new { @id = "shiftName", @class = "form-control", @placeholder = "--Tên ca--" })
                            @Html.ValidationMessageFor(newShift => newShift.ShiftName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-10">
                            <div class="modal__text">
                                Loại ca
                            </div>
                            @Html.DropDownListFor(newShift => newShift.ShiftType, (IEnumerable<SelectListItem>)ViewBag.ListOfShiftType, "--Chọn loại ca--", new { @id = "shiftType", @class = "form-control", @placeholder = "--Loại ca--" })
                            @Html.ValidationMessageFor(newShift => newShift.ShiftType, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-offset-1 col-md-12">
                            <div class="modal__text">
                                Thời gian làm việc
                            </div>
                            <div class="form-group form-inline">
                                @Html.TextBoxFor(newShift => newShift.StartTime, "{0:HH:mm}", new { @id = "startTime", @class = "text-box single-line", @type = "time" })
                                @Html.ValidationMessageFor(newShift => newShift.StartTime, "", new { @class = "text-danger" })
                                <span> đến </span>
                                @Html.TextBoxFor(newShift => newShift.EndTime, "{0:HH:mm}", new { @id = "endTime", @class = "text-box single-line", @type = "time" })
                                @Html.ValidationMessageFor(newShift => newShift.EndTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="modal__text">
                            Các ngày làm việc trong tuần
                        </div>
                        <ul class="checkbox">
                            <li>
                                @Html.CheckBoxFor(newShift => newShift.Monday, new { @id = "mon", @class = "form-control" }) Thứ hai
                                @Html.ValidationMessageFor(newShift => newShift.Monday, "", new { @class = "text-danger" })
                            </li>

                            <li>
                                @Html.CheckBoxFor(newShift => newShift.Tuesday, new { @id = "tue", @class = "form-control" }) Thứ ba
                                @Html.ValidationMessageFor(newShift => newShift.Tuesday, "", new { @class = "text-danger" })
                            </li>

                            <li>
                                @Html.CheckBoxFor(newShift => newShift.Wednesday, new { @id = "tue", @class = "form-control" }) Thứ tư
                                @Html.ValidationMessageFor(newShift => newShift.Wednesday, "", new { @class = "text-danger" })
                            </li>

                            <li>
                                @Html.CheckBoxFor(newShift => newShift.Thursday, new { @id = "tue", @class = "form-control" }) Thứ năm
                                @Html.ValidationMessageFor(newShift => newShift.Thursday, "", new { @class = "text-danger" })
                            </li>

                            <li>
                                @Html.CheckBoxFor(newShift => newShift.Friday, new { @id = "tue", @class = "form-control" }) Thứ sáu
                                @Html.ValidationMessageFor(newShift => newShift.Friday, "", new { @class = "text-danger" })
                            </li>

                            <li>
                                @Html.CheckBoxFor(newShift => newShift.Saturday, new { @id = "tue", @class = "form-control" }) Thứ bảy
                                @Html.ValidationMessageFor(newShift => newShift.Saturday, "", new { @class = "text-danger" })
                            </li>

                            <li>
                                @Html.CheckBoxFor(newShift => newShift.Sunday, new { @id = "tue", @class = "form-control" }) Chủ nhật
                                @Html.ValidationMessageFor(newShift => newShift.Sunday, "", new { @class = "text-danger" })
                            </li>
                        </ul>

                        <ul class="button">
                            <li>
                                <input type="submit" id="savebtn" value="Lưu" style="background: #3D76B5">
                            </li>
                            <li>
                                <input type="button" id="deletebtn" value="Hủy" style="background: #C33333" onclick="closeModal()">
                            </li>
                        </ul>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="bg" onclick="closeModal()"></div>


    <br />
    <br />
    <br />
    <table class="table table-striped">
        <thead>
            <tr>
                <th>STT</th>
                <th>Tên ca</th>
                <th>Loại ca</th>
                <th>Thời gian</th>
                <th>Thời lượng</th>
                <th>Các ngày làm việc trong tuần</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="SetShiftList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <script>
        $("#LoadingStatus").html("Loading....");
        // Get the modal
        var modal = document.getElementById("createModal");

        // Get the button that opens the modal
        var btn = document.getElementById("btn");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks the button, open the modal
        btn.onclick = function () {
            modal.style.display = "block";
            $("#form")[0].reset();
            var dheight = document.body.clientHeight;
            var dwidth = document.body.clientWidth;

            $("#bg").width("100%").height("100%");

            $("#bg").fadeTo("slow", 0.8);
        }

        var btnCreate = document.getElementById("savebtn");

        function CheckData() {
            if (document.getElementsById('shiftName')[0].value == null);

        }

        function createShift() {
            CheckData();

            var data = $("#SubmitForm").serialize();
            $.ajax({
                type: "Post",
                url: "/SHIFTs/SaveDataInDatabase",
                data: data,
                success: function (result) {
                    alert("Success!..");
                    window.location.href = "/SHIFTs/index";
                    closeModal();
                }
            })
        }

        //close create modal
        function closeModal() {
            modal.style.display = "none";
            $("#bg").fadeOut();
        }

        $.get("/SHIFTs/GetShiftList", null, DataBind);
        function DataBind(ShiftList) {
            var SetData = $("#SetShiftList");
            for (var i = 0; i < ShiftList.length; i++) {
                var Data = "<tr class='row_" + ShiftList[i].ShiftID + "'>" +
                    "<td>" + (i + 1) + "</td>" +
                    "<td>" + ShiftList[i].ShiftName + "</td>" +
                    "<td>" + ShiftList[i].ShiftType + "</td>" +
                    "<td>" + ShiftList[i].StartTime + " - " + ShiftList[i].EndTime + "</td>" +
                    "<td>" + "</td>" +
                    "<td>";
                var flag = 0;
                if (ShiftList[i].Monday == true) {
                    Data = Data + "T2";
                    flag = 1;
                }
                if (ShiftList[i].Tuesday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T3";
                    flag = 1;
                }
                if (ShiftList[i].Wednesday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T4";
                    flag = 1;
                }
                if (ShiftList[i].Thursday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T5";
                    flag = 1;
                }
                if (ShiftList[i].Friday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T6";
                    flag = 1;
                }
                if (ShiftList[i].Saturday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "T7";
                    flag = 1;
                }
                if (ShiftList[i].Sunday == true) {
                    if (flag == 1)
                        Data = Data + ", ";
                    Data = Data + "CN";
                    flag = 1;
                }
                Data = Data + "</td>" + "</tr>";
                SetData.append(Data);
                $("#LoadingStatus").html(" ");
            }
        }
    </script>
</body>