@model HRM.Models.EmployeeViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /* Style the button that is used to open and close the collapsible content */
    .collapsible {
        background: #E0EFFF;
        border-radius: 4px;
        width: 100%;
        height: 35px;
        border-bottom: 1px solid #4282BB;
        position: relative;
        cursor: pointer;
        /*Text*/
        color: #4282BB;
        padding-left: 10px;
        text-align: left;
        outline: none;
        font-size: 15px;
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: bold;
        font-size: 18px;
        line-height: 30px;
        letter-spacing: 0.01em;
        overflow: auto;
    }
        /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        .collapsible:hover {
            color: white;
        }
    /* Style the collapsible content. Note: show by default */
    .collapsible-content {
        margin-top: 18px;
        font-size: 15px;
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: normal;
        font-size: 18px;
        line-height: 30px;
        /* identical to box height, or 22px */
        letter-spacing: 0.01em;
        width: 1000px;
        position: relative;
        margin-bottom: 18px;
        display: block;
    }

    .collapsible:after {
        content: '+';
        float: left;
        font-size: 30px;
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: bold;
        line-height: 30px;
        color: #4282BB;
    }

    .active:after {
        content: "-";
        float: left;
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: bold;
        font-size: 30px;
        line-height: 30px;
        color: #4282BB;
    }

    .label {
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: normal;
        font-size: 15px;
        line-height: 30px;
        /* identical to box height, or 22px */
        letter-spacing: 0.01em;
        background: none;
        position: absolute;
        color: black;
    }

    .text-box {
        align-items: flex-start;
        padding: 12px;
        height: 47px;
        /* Surface/Light */
        background: #F8FAFA;
        border: 1px solid #DBDBDB;
        box-sizing: border-box;
        border-radius: 4px;
        /* Inside Auto Layout */
        flex: none;
        order: 1;
        align-self: stretch;
        flex-grow: 0;
        margin: 0px 2px;
        /*Text*/
        color: #060606;
        padding-left: 10px;
        position: absolute;
        font-size: 15px;
    }

    .drop-down-list {
        height: 47px;
        /* Surface/Light */
        background: #F8FAFA;
        border: 1px solid #DBDBDB;
        box-sizing: border-box;
        border-radius: 4px;
        /* Inside Auto Layout */
        order: 1;
        flex-grow: 0;
        margin: 0px 2px;
        padding-left: 10px;
        position: absolute;
        font-size: 15px;
    }

    .btn-insert {
        height: 50px;
        left: 70px;
        top: 330px;
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: 500;
        font-size: 18px;
        line-height: 16px;
        /* or 89% */
        align-items: center;
        text-align: center;
        letter-spacing: 1.25px;
        text-transform: uppercase;
        /* White / High Emphasis */
        color: #FFFFFF;
        background: #3D76B5;
        /* 1 dp */
        box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
        border-radius: 4px;
        padding: 10px 10px 10px 10px;
        position: absolute;
        overflow: hidden;
    }

    .img {
        width: 220.69px;
        height: 290px;
        left: 30px;
        top: 30px;
        position: absolute;
    }

    .date {
        height: 47px;
        /* Surface/Light */
        background: #F8FAFA;
        border: 1px solid #DBDBDB;
        box-sizing: border-box;
        border-radius: 4px;
        /*Text*/
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: normal;
        font-size: 15px;
        line-height: 150%;
        padding-left: 10px;
        position: absolute;
    }

    .radio {
        box-sizing: border-box;
        border-radius: 80px;
        position: absolute;
    }

    .btn-add {
        height: 40px;
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: bold;
        font-size: 18px;
        line-height: 150%;
        text-align: center;
        /* or 27px */
        letter-spacing: 0.01em;
        background: #C4C4C4;
        border: 1px solid #DBDBDB;
        box-sizing: border-box;
        border-radius: 4px;
        line-height: 40px;
        text-transform: uppercase;
        font-weight: bold;
        cursor: pointer;
    }

    .btn-save {
        background: #3D76B5;
        /* 1 dp */
        box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
        border-radius: 4px;
        color: white;
        width: 80px;
        height: 40px;
        left: 350px;
        position: absolute;
    }

    .btn-cancel {
        background: #E65252;
        /* 1 dp */
        box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.12), 0px 2px 2px rgba(0, 0, 0, 0.24);
        border-radius: 4px;
        width: 80px;
        height: 40px;
        color: white;
        left: 450px;
        position: absolute;
    }
    /*phan tu goc*/
    .first-element {
        position: relative;
        height: 200px;
        left: 255px;
        width: 800px;
        padding: 0 0 0 0;
    }

    .text-danger {
        position: absolute;
        font-family: IBM Plex Sans;
        font-style: normal;
        font-weight: normal;
        font-size: 12px;
        line-height: 16px;
        /* identical to box height */
        display: flex;
        align-items: center;
        /* Text / Status - Failed */
        color: #FF0C3E;
    }

    modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 11; /* Sit on top */
        float: left;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        width: 100%;
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        -webkit-animation-name: fadeIn; /* Fade in the background */
        -webkit-animation-duration: 0.4s;
        animation-name: fadeIn;
        animation-duration: 0.4s;
        vertical-align: middle;
        border-left: 100px;
        border-right: 100px;
    }

    /* Modal Content */
    modal-content {
        position: fixed;
        bottom: 0;
        background-color: #fefefe;
        width: 100%;
        -webkit-animation-name: slideIn;
        -webkit-animation-duration: 0.4s;
        animation-name: slideIn;
        animation-duration: 0.4s
    }

    /* The Close Button */
    close {
        color: white;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        close:hover,
        close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

    modal-header {
        padding: 2px 16px;
        background-color: #5cb85c;
        color: white;
    }

    modal-body {
        padding: 2px 16px;
    }

    modal-footer {
        padding: 2px 16px;
        background-color: #5cb85c;
        color: white;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="collapsible">
        Thông tin cơ bản
    </div>
    <div class="collapsible-content" id="c1" style="height: 800px;">
        <div class="label" style="left: 300px;">
            Mã nhân viên
        </div>
        @Html.TextBoxFor(model => model.EmployeeID, new { @placeholder = ViewBag.EmployeeID, style = "left: 300px; top: 30px; width: 160px; background: #E8E8E8;", @readonly = true, @class = "text-box", })
        <div class="label" style="left: 500px;">
            Tên nhân viên
        </div>
        @Html.TextBoxFor(model => model.EmployeeName, new { style = "left: 500px; top: 30px; width: 420px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.EmployeeName, "", new { style = "left: 500px; top: 80px;", @class = "text-danger" })
    <div>
        <img id="output" class="img" />
        @Html.TextBoxFor(model => model.ImageFile, new { style = "left: 70px; top: 330px; width: 420px; position: absolute", type = "file", @class = "form-control" })
    </div>

        <div class="label" style="left: 300px; top: 100px;">
            Giới tính
        </div>
        <input name="Sex" type="radio" checked="checked" value="Nam" class="radio" style="left: 320px; top:133px" />
        <div class="label" style="left: 345px; top: 130px;">
            Nam
        </div>
        <input name="Sex" type="radio" value="Nữ" class="radio" style="left: 380px; top:133px" />
        <div class="label" style="left: 405px; top: 130px;">
            Nữ
        </div>
        <div class="label" style="left: 500px; top: 100px;">
            Ngày sinh
        </div>
        <input type="date" name="DoB" class="date" style="left: 500px; top: 130px;" />
        @Html.ValidationMessageFor(model => model.DoB, "", new { style = "left: 500px; top: 180px;", @class = "text-danger" })
        <div class="label" style="left: 700px; top: 100px;">
            Nơi sinh
        </div>
        @Html.DropDownListFor(model => model.Birthplace, (IEnumerable<SelectListItem>)ViewBag.Birthplace, new { style = "left: 700px; top: 130px; width: 160px;", @class = "drop-down-list" })
        <div class="label" style="left: 300px; top: 200px;">
            Quê quán
        </div>
        @Html.DropDownListFor(model => model.HomeTown, (IEnumerable<SelectListItem>)ViewBag.HomeTown, new { style = "left: 300px; top: 230px; width: 160px;", @class = "drop-down-list" })
        <div class="label" style="left: 500px; top: 200px;">
            Dân tộc
        </div>
        @Html.DropDownListFor(model => model.Nation, (IEnumerable<SelectListItem>)ViewBag.nationList, new { style = "left: 500px; top: 230px; width: 160px;", @class = "drop-down-list" })
        <div class="label" style="left: 700px; top: 200px;">
            Số CMND/CCCD
        </div>
        @Html.TextBoxFor(model => model.IdNumber, new { style = "left: 700px; top: 230px; width: 160px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.IdNumber, "", new { style = "left: 700px; top: 280px;", @class = "text-danger" })
        <div class="label" style="left: 300px; top: 300px;">
            Số điện thoại
        </div>
        @Html.TextBoxFor(model => model.Phone, new { style = "left: 300px; top: 330px; width: 160px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.Phone, "", new { style = "left: 300px; top: 380px;", @class = "text-danger" })
        <div class="label" style="left: 500px; top: 300px;">
            Email
        </div>
        @Html.TextBoxFor(model => model.Email, new { style = "left: 500px; top: 330px; width: 420px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.Email, "", new { style = "left: 500px; top: 380px;", @class = "text-danger" })
        <div class="label" style="left: 30px; top: 400px;">
            Địa chỉ
        </div>
        @Html.TextBoxFor(model => model.Street, new { style = "left: 30px; top: 430px; width: 250px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.Street, "", new { style = "left: 30px; top: 480px;", @class = "text-danger" })
        @Html.DropDownList("Dictrict", (IEnumerable<SelectListItem>)ViewBag.Dictrict, new { style = "left: 320px; top: 430px; width: 160px;", @class = "drop-down-list" })
        @Html.DropDownList("Ward", (IEnumerable<SelectListItem>)ViewBag.Ward, new { style = "left: 520px; top: 430px; width: 160px;", @class = "drop-down-list" })
        @Html.DropDownList("City", (IEnumerable<SelectListItem>)ViewBag.City, new { style = "left: 720px; top: 430px; width: 160px;", @class = "drop-down-list" })
        <div class="label" style="left: 30px; top: 500px;">
            Phòng
        </div>
        @Html.DropDownList("RoomID", (IEnumerable<SelectListItem>)ViewBag.RoomID, new { style = "left: 30px; top: 530px; width: 250px;", @class = "drop-down-list" })
        <div class="label" style="left: 320px; top: 500px;">
            Chức vụ
        </div>
        @Html.DropDownList("PositionID", (IEnumerable<SelectListItem>)ViewBag.PositionID, new { style = "left: 320px; top: 530px; width: 250px;", @class = "drop-down-list" })
        <div class="label" style="left: 30px; top: 600px;">
            Miễn BHYT
        </div>
        <input name="HealthInsurance" type="radio" checked="checked" value="true" class="radio" style="left: 50px; top:633px" />
        <div class="label" style="left: 75px; top: 630px;">
            Có
        </div>
        <input name="HealthInsurance" type="radio" value="false" class="radio" style="left: 100px; top:633px" />
        <div class="label" style="left: 125px; top: 630px;">
            Không
        </div>
        <div class="label" style="left: 320px; top: 600px;">
            Mã số thẻ BHYT
        </div>
        @Html.TextBoxFor(model => model.HealthInsuranceID, new { style = "left: 320px; top: 630px; width: 220.69px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.HealthInsuranceID, "", new { style = "left: 320px; top: 680px;", @class = "text-danger" })
        <div class="label" style="left: 30px; top: 700px;">
            Đăng ký giảm trừ bản thân
        </div>
        <input name="DeductionPersonal" type="radio" checked="checked" value="true" class="radio" style="left: 50px; top:733px" />
        <div class="label" style="left: 75px; top: 730px;">
            Có
        </div>
        <input name="DeductionPersonal" type="radio" value="false" class="radio" style="left: 100px; top:733px" />
        <div class="label" style="left: 125px; top: 730px;">
            Không
        </div>
        <div class="label" style="left: 320px; top: 700px;">
            Đăng ký số người phụ thuộc
        </div>
        @Html.TextBoxFor(model => model.DeductionDependent, new { style = "left: 320px; top: 730px; width: 220.69px; background: #F8FAFA;", @class = "text-box", @Value = "0" })
        @Html.ValidationMessageFor(model => model.DeductionDependent, "", new { style = "left: 320px; top: 780px;", @class = "text-danger" })
    </div>
    <div class="collapsible">
        Trình độ chuyên môn
    </div>
    <div class="collapsible-content" id="c2" style="height: 200px;">
        <div class="label" style="left: 10px;">
            Trình độ
        </div>
        @Html.DropDownListFor(m => m.EducationName, (IEnumerable<SelectListItem>)ViewBag.EducationName, new { style = "margin-left: 10px; top: 28px; width: 180px;", @class = "drop-down-list", id = "eduid" })
        @Html.ValidationMessageFor(model => model.EducationName, "", new { style = "left: 320px; top: 780px;", @class = "text-danger" })
        <div class="label" style="left: 300px;">
            Chuyên ngành
        </div>
        @Html.DropDownListFor(m => m.MajorID, (IEnumerable<SelectListItem>)ViewBag.MajorID, new { style = "margin-left: 300px; margin-top: 28px; width: 360px;", @class = "drop-down-list", id = "majid" })
        <div class="label" style="left: 10px; top: 100px;">
            Ngày cấp
        </div>
        <input type="date" name="Date" class="date" style="left: 10px; top: 130px; width: 180px;" />
        @Html.ValidationMessageFor(model => model.Date, "", new { style = "left: 10px; top: 180px;", @class = "text-danger" })
        <div class="label" style="left: 300px;top: 100px;">
            Nơi đào tạo
        </div>
        @Html.TextBoxFor(model => model.Place, new { style = "left: 300px; top: 130px; width: 360px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.Place, "", new { style = "left: 300px; top: 180px;", @class = "text-danger" })
    </div>
    <div class="collapsible">
        Chứng chỉ chuyên ngành
    </div>
    <div class="collapsible-content" id="c3" style="height: 200px;">
        <div class="label" style="left: 10px;">
            Tên chứng chỉ
        </div>
        @Html.TextBoxFor(model => model.CertificateName, new { style = "margin-left: 10px; margin-top: 28px; width: 200px", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.CertificateName, "", new { style = "left: 10px; top: 78px;", @class = "text-danger" })
        <div class="label" style="left: 300px;">
            Loại chứng chỉ
        </div>
        @Html.DropDownListFor(m => m.TypeCertificate, (IEnumerable<SelectListItem>)ViewBag.TypeCertificate, new { style = "margin-left: 300px; margin-top: 28px; width: 360px;", @class = "drop-down-list" })
        <div class="label" style="left: 10px;top: 100px;">
            Ngày cấp
        </div>
        <input type="date" name="CertificateDate" class="date" style="left: 10px; top: 130px; width: 200px;" />
        @Html.ValidationMessageFor(model => model.CertificateDate, "", new { style = "left: 10px; top: 180px;", @class = "text-danger" })
        <div class="label" style="left: 300px;top: 100px;">
            Nơi cấp
        </div>
        @Html.TextBoxFor(model => model.CertificatePlace, new { style = "left: 300px; top: 130px; width: 360px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.CertificatePlace, "", new { style = "left: 300px; top: 180px;", @class = "text-danger" })
    </div>
    <div class="collapsible">
        Hợp đồng
    </div>
    <div class="collapsible-content" id="c4" style="left: 0px; top: 0px;  height: 200px;">
        <div class="label" style="left: 30px;">
            Số hợp đồng
        </div>
        @Html.TextBoxFor(model => model.ContractID, new { style = "left: 30px; top: 30px; width: 200px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.ContractID, "", new { style = "left: 30px; top: 80px;", @class = "text-danger" })
        <div class="label" style="left: 300px;">
            Loại hợp đồng
        </div>
        @Html.DropDownListFor(m => m.ContractType, (IEnumerable<SelectListItem>)ViewBag.ContractType, new { style = "left: 300px; top: 30px; width: 200px;", @class = "drop-down-list", id = "contracttype" })
        <div class="label" style="left: 30px; top: 100px;">
            Lương cơ bản (đồng)
        </div>
        @Html.TextBoxFor(model => model.BasicSalary, new { style = "left: 30px; top: 130px; width: 200px; background: #F8FAFA;", @class = "text-box", })
        @Html.ValidationMessageFor(model => model.BasicSalary, "", new { style = "left: 30px; top: 180px;", @class = "text-danger" })
        <div class="label" style="left: 300px; top: 100px;">
            Ngày vào làm
        </div>
        <input type="date" name="DateStartWork" class="date" style="left: 300px; top: 130px;" />
        @Html.ValidationMessageFor(model => model.DateStartWork, "", new { style = "left: 300px; top: 130px;", @class = "text-danger" })
        <div class="label" style="left: 550px; top: 100px;">
            Ngày hết hạn
        </div>
        <input type="date" name="ContractExpirationDate" class="date" style="left: 550px; top: 130px;" />
        @Html.ValidationMessageFor(model => model.ContractExpirationDate, "", new { style = "left: 550px; top: 180px;", @class = "text-danger" })
    </div>
    <div class="collapsible">
        Tài khoản
    </div>
    <div class="collapsible-content" id="c5" style="left: 0px; top: 0px;  height: 100px;">
        <div class="label" style="left: 30px;">
            Mật khẩu
        </div>
        @Html.TextBoxFor(model => model.Password, new { style = "left: 30px; top: 30px; width: 200px; background: #F8FAFA;", @class = "text-box", id = "pass", @readonly = true })
    </div>
    <div style="position: relative">
        <input type="submit" value="Lưu" class="btn-save" onclick="openModal()" />
        <button class="btn-cancel" onclick="GoHome()">
            HỦY
        </button>
    </div>
    <script>
        var coll = document.getElementsByClassName("collapsible");
        var i;
        for (i = 0; i < coll.length; i++) {
            coll[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var content = this.nextElementSibling;
                if (content.style.display === "block") {
                    content.style.display = "none";
                } else {
                    content.style.display = "block";
                }
            });
        }
        function GoHome() {
            location.href = "https://localhost:44319/EMPLOYEEs/Index";
        }

        $(document).ready(function () {
            $("#contracttype").change(function () {
                if (this.value === 'Hợp đồng thử việc')
                    $("input[name='TrialTime']").prop('readonly', false);//enable it back again
                else
                    $("input[name='TrialTime']").prop('readonly', true);
            });
        });

        var loadFile = function (event) {
            var image = document.getElementById('output');
            image.src = URL.createObjectURL(event.target.files[0]);
        };
        var randomstring = Math.random().toString(36).slice(-8);
        document.getElementById("pass").value = randomstring;
        //Math.random()                        // Generate random number, eg: 0.123456
        // .toString(36)           // Convert to base-36 : "0.4fzyo82mvyr"
        //.slice(-8);// Cut off last 8 characters : "yo82mvyr"
        document.getElementById("c1").click();
        document.getElementById("c2").click();
        document.getElementById("c3").click();
        document.getElementById("c4").click();
        document.getElementById("c5").click();
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
